// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model UserInfo {
  id                  String       @id @default(cuid())
  username            String
  is_backer           Boolean      @default(false)
  admin               Boolean      @default(false)
  potAccess           PotAccess[]
  Sessions            Sessions[]
  sentFriendships     Friendship[] @relation(name: "sent")
  receivedFriendships Friendship[] @relation(name: "received")
  SessionComments  SessionComments[]


  @@unique([username])
  @@index([username])
}

model Friendship {
  id         Int      @id @default(autoincrement())
  user_id    String
  user       UserInfo @relation(name: "sent", fields: [user_id], references: [id])
  friend_id  String
  friend     UserInfo @relation(name: "received", fields: [friend_id], references: [id])
  status     Boolean  @default(false)
  created_at DateTime @default(now())

  @@unique([user_id, friend_id])
  @@index([user_id])
  @@index([friend_id])
}

model Pots {
  id         Int         @id @default(autoincrement())
  name       String
  owner      String
  float      Int
  created_at DateTime    @default(now())
  sessions   Sessions[]
  access     PotAccess[] @relation("PotAccess")

  @@unique([name, owner])
  @@index([owner])
}

model PotAccess {
  id      Int      @id @default(autoincrement())
  user_id String
  pot_id  Int
  type    Int
  percent Float    @default(0)
  user    UserInfo @relation(fields: [user_id], references: [id])
  pot     Pots     @relation("PotAccess", fields: [pot_id], references: [id])

  @@unique([user_id, pot_id])
  @@index([pot_id])
  @@index([user_id])
}

model Sessions {
  id             Int      @id @default(autoincrement())
  user_id        String
  user           UserInfo @relation(fields: [user_id], references: [id])
  pot            Pots     @relation(fields: [pot_id], references: [id])
  pot_id         Int
  amount         Int
  total          Int
  top_ups_total  Int @default(0)
  created_at     DateTime @default(now())
  session_length Int?
  chop_split Json?
  transaction_type transactionType @default(cash_game)
  likes Int @default(0)

  @@index([pot_id])
  @@index([user_id])
}

model SessionComments {
  id Int @id @default(autoincrement())
  user_id String
  user UserInfo @relation(fields: [user_id], references: [id])
  comment String
  likes Int @default(0)
  created_at DateTime @default(now())

  @@index([user_id])
}

enum transactionType {
  top_up
  chop
  cash_game
  tournament
}